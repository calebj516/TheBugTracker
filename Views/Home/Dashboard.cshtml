@model TheBugTracker.Models.ViewModels.DashboardViewModel
@using Microsoft.AspNetCore.Identity
@using TheBugTracker.Services.Interfaces
@using TheBugTracker.Models.Enums

@inject UserManager<BTUser> UserManager
@inject IBTRolesService RolesService

@{
    ViewData["Title"] = "Dashboard";
    BTUser btUser = await UserManager.GetUserAsync(User);
}

<!-- Styles -->
<style>
    .amDark {
        background-color: #30303d;
        color: #fff;
    }

    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>

<h1>Dashboard</h1>
<a href="javascript:void(0);">
    @if (btUser?.AvatarFileData != null)
    {
        <img class="media-object" src="data:image/*;base64,@(Convert.ToBase64String(btUser.AvatarFileData))" alt="User Avatar Image" />
    }
    else
    {
        <img class="media-object" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="Default Avatar Image" style="width:30px;height:30px;" />
    }
</a>


<strong>@btUser.FullName</strong>
<span class="text-muted" style="font-size:x-small;">
    <strong>@Model.Company.Name</strong>
</span>


<div>
    <div classxfont-weighteighteightgetainer-fluid">

        <!-- Info Pills -->
        <div class="row my-4">
            <div class="col-xl-3 col-md-6 mb-2">
                <a asp-action="AllProjects" asp-controller="Projects" style="text-decoration:none">
                    <div class="card text-center bg-info">
                        <div class="body">
                            <div class="p-15 text-light">
                                @if (Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count() == 1)
                                {
                                    <h3>@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
                                    <span>Active Project</span>
                                }
                                else
                                {
                                    <h3>@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
                                    <span>Active Projects</span>
                                }

                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-xl-3 col-md-6 mb-2">
                <a asp-action="AllTickets" asp-controller="Tickets" style="text-decoration:none">
                    <div class="card text-center bg-secondary">
                        <div class="body">
                            <div class="p-15 text-light">

                                <h3>@Model.Tickets.Count()</h3>
                                <span>Total Tickets</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-xl-3 col-md-6 mb-2">
                <div class="card text-center bg-warning">
                    <div class="body">
                        <div class="p-15 text-light">
                            <h3>@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
                            <span>Unassigned Tickets</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6 mb-2">
                <div class="card text-center bg-dark">
                    <div class="body">
                        <div class="p-15 text-light">
                            <h3>
                                @(
                                    Model.Projects.Count()
                                    + Model.Tickets.Count()
                                    + Model.Members.Count()
                                    )
                            </h3>
                            <span>Total Data</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-4">

            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">
                        <i class="fas fa-chart-area me-1"></i>
                        Projects by Priority
                    </div>
                    <div class="card-body d-flex flex-column justify-content-center align-items-center" style="height:400px">
                        <div id="chart3D"></div>
                    </div>
                    <div class="card-footer">
                        <i>Google Charts</i>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">
                        <i class="fas fa-chart-area me-1"></i>
                        Project Tickets Count (%)
                    </div>
                    <div class="card-body d-flex flex-column justify-content-center align-items-center" style="height:400px">
                        <div id="donut"></div>
                    </div>
                    <div class="card-footer">
                        <i>Google Charts</i>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">
                        <i class="fas fa-chart-area me-1"></i>
                        Tickets by Priority
                    </div>
                    <div class="card-body" style="height:400px">
                        <!-- Morris: Donut -->
                        <div class="col-md-12">
                            <div id="legend" class="donut-legend" style="font-size:x-small"></div>
                        </div>
                        <div class="col-md-12">
                            <div class="chart chart-md" id="morrisTicketPriority"></div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <i>Morris Charts</i>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">
                        <i class="fas fa-chart-area me-1"></i>
                        Tickets by Status
                    </div>
                    <div class="card-body" style="height:400px">
                        <!-- ChartJS: Pie/Doughnut -->
                        <div class="col-md-12">
                            <!--  Chart.js Canvas Tag -->
                            <canvas id="donutChart"></canvas>
                        </div>
                    </div>
                    <div class="card-footer">
                        <i>ChartJS</i>
                    </div>
                </div>
            </div>

        </div>

        @*        <div class="row mb-4">
        <div class="card mb-4">
        <div class="card-header">
        <i class="fas fa-chart-bar me-1"></i>
        Project: Tickets vs Developers
        </div>
        <div class="card-body" style="height:600px">
        <div id="chartdiv"></div>
        </div>
        <div class="card-footer">
        <i>amCharts</i>
        </div>
        </div>
        </div>*@

        <div class="row mb-4">
            <div class="col">
                <div class="card mb-4">
                    <div class="card-header">
                        <i class="fas fa-chart-bar me-1"></i>
                        Tickets vs Developers
                    </div>
                    <div class="card-body d-flex flex-column justify-content-center" style="height:600px;overflow-y:auto;">
                        <div id="plotlyChart"></div>
                    </div>
                    <div class="card-footer">
                        <i>Plotly Charts</i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row my-4">
        @* Projects Table *@
        <div class="col-md-5">
            <div class="card mb-4">
                <div class="card-header">
                    <h2>Projects</h2>
                </div>
                <div class="card-body">
                    <div class="table-responsive" style="overflow-y:auto;height:600px;">
                        <table class="table table-hover">
                            <thead class="">
                                <tr>
                                    <th>Name</th>
                                    <th>Start Date</th>
                                    <th>End Date</th>
                                    <th>Priority</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var project in Model.Projects.OrderByDescending(d => d.EndDate))
                                {
                                    <tr>
                                        <td><a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" style="color:black"><strong>@project.Name</strong></a></td>
                                        <td><span style="font-size:small">@project.StartDate.ToString("MM.dd.yyyy")</span></td>
                                        <td><span style="font-size:small">@project.EndDate.ToString("MM.dd.yyyy")</span></td>
                                        <td><span class="badge bg-dark">@project.ProjectPriority?.Name</span></td>
                                        <td>
                                            <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id"><i class="fs-5 bi-justify"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                </div>
                <div class="card-footer">
                </div>
            </div>
        </div>
        @* Tickets Table *@
        <div class="col-md-5">
            <div class="card mb-4">
                <div class="card-header">
                    <h2>Tickets</h2>
                </div>
                <div class="card-body">
                    <div class="table-responsive" style="overflow-y:auto;height:600px;">
                        <table class="table table-hover">
                            <thead class="">
                                <tr>
                                    <th>Title</th>
                                    <th>Developer</th>
                                    <th>Status</th>
                                    <th>Priority</th>
                                    <th>Date</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
                                {
                                    <tr>
                                        <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
                                        <td>
                                            @if (ticket.DeveloperUserId != null)
                                            {
                                                @ticket.DeveloperUser?.FullName
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning text-dark">Unassigned</span>
                                            }
                                        </td>
                                        @if (ticket.TicketStatus.Name == "New")
                                        {
                                            <td><span class="badge bg-success rounded-pill">@ticket.TicketStatus.Name </span></td>
                                        }
                                        else
                                        {
                                            <td><span class="badge bg-secondary rounded-pill">@ticket.TicketStatus.Name </span></td>
                                        }
                                        <td><span class="badge bg-dark">@ticket.TicketPriority.Name </span></td>
                                        <td><span style="font-size:small">@ticket.Created.ToString("MM.dd.yyyy")</span></td>
                                        <td>
                                            <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                </div>
                <div class="card-footer">
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card mb-4" style="">
                <div class="card-header">
                    <h2>Members</h2>
                </div>
                <div class="card-body" style="overflow-y:auto;height:600px;background-color:antiquewhite">
                    @foreach (BTUser member in Model.Members)
                    {
                        <div class="">

                            <span style="font-weight:bold">@member.FullName</span>
                            <h6>@((await RolesService.GetUserRolesAsync(member)).FirstOrDefault())</h6>

                        </div>
                        <hr />
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {

    <!--Google Charts-->
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>

    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectPriority",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);


                    // 3D Pie
                    var options = {
                        title: "Project Priority",
                        is3D: true,
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: { position: 'bottom' }
                    };

                    var chart = new google.visualization.PieChart($("#chart3D")[0]);
                    chart.draw(data, options);
                },
                failure: function (result) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>

    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectTickets",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    // Donut
                    var options = {
                        title: 'Company Ticket Distribution',
                        pieHole: 0.3,
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: { position: 'none' }
                    };
                    var chart = new google.visualization.PieChart($("#donut")[0]);
                    chart.draw(data, options);
                },
                failure: function (result) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>

    @* Morris Donut Chart *@
    <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
    <script>
        var morrisDonutData = [{
            label: "Low",
            value: @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(BTTicketPriority.Low)).Count()
                },
        {
            label: "Medium",
            value: @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(BTTicketPriority.Medium)).Count()
                },
        {
            label: "High",
            value: @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(BTTicketPriority.High)).Count()
                },
        {
            label: "Urgent",
            value: @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(BTTicketPriority.Urgent)).Count()
                }];

        // Morris: Donut

        if ($('#morrisTicketPriority').get(0)) {
            var donutChart = Morris.Donut({
                resize: true,
                element: 'morrisTicketPriority',
                data: morrisDonutData,
                colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
            });

            donutChart.options.data.forEach(function (label, i) {
                var legendItem = $('<span></span>').text(label['label'] + ": " + label['value']).prepend('<span>&nbsp;</span>');
                legendItem.find('span')
                    .css('backgroundColor', donutChart.options.colors[i])
                    .css('width', '20px')
                    .css('display', 'inline-block')
                    .css('margin', '10px');
                $('#legend').append(legendItem)
            });
        };
    </script>

    <!-- *** Begin Chart JS Pie/Donut *** -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
    <script>

        var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
        var donutData = {
            labels: [
                '@nameof(BTTicketStatus.Development)',
                '@nameof(BTTicketStatus.New)',
                '@nameof(BTTicketStatus.Resolved)',
                '@nameof(BTTicketStatus.Testing)'
            ],
            datasets: [
                {
                    data: [
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Development)).Count(),
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.New)).Count(),
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Resolved)).Count(),
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Testing)).Count()
                            ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)'
                    ]
                }
            ]
        };

        var donutOptions = {
            maintainAspectRatio: false,
            responsive: true,
        };

        // Create pie or donut chart
        // Can switch between pie and donut using the method below:
        new Chart(donutChartCanvas, {
            type: 'doughnut',
            data: donutData,
            options: donutOptions
        });
    </script>
    <!-- *** End Chart JS Donut -->
    <!-- *** Begin AM Charts *** -->
    <!-- Resources -->
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>

    <!-- Chart code -->
    <script>
        $.ajax({
            type: "POST",
            url: "/Home/AmCharts",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                am4core.ready(function () {

                    // Themes begin
                    // Themes end

                    // Create chart instance
                    var chart = am4core.create("chartdiv", am4charts.XYChart);


                    // Add data
                    chart.data = result;

                    // Create axes
                    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                    categoryAxis.dataFields.category = "project";
                    categoryAxis.numberFormatter.numberFormat = "#";
                    categoryAxis.renderer.inversed = true;
                    categoryAxis.renderer.grid.template.location = 0;
                    categoryAxis.renderer.cellStartLocation = 0.1;
                    categoryAxis.renderer.cellEndLocation = 0.9;

                    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
                    valueAxis.renderer.opposite = true;

                    // Create series
                    function createSeries(field, name) {
                        var series = chart.series.push(new am4charts.ColumnSeries());
                        series.dataFields.valueX = field;
                        series.dataFields.categoryY = "project";
                        series.name = name;
                        series.columns.template.tooltipText = "{name}: [bold]{valueX}[/]";
                        series.columns.template.height = am4core.percent(100);
                        series.sequencedInterpolation = true;

                        var valueLabel = series.bullets.push(new am4charts.LabelBullet());
                        valueLabel.label.text = "{valueX}";
                        valueLabel.label.horizontalCenter = "left";
                        valueLabel.label.dx = 10;
                        valueLabel.label.hideOversized = false;
                        valueLabel.label.truncate = false;

                        var categoryLabel = series.bullets.push(new am4charts.LabelBullet());
                        categoryLabel.label.text = "{name}";
                        categoryLabel.label.horizontalCenter = "right";
                        categoryLabel.label.dx = -10;
                        categoryLabel.label.fill = am4core.color("#fff");
                        categoryLabel.label.hideOversized = false;
                        categoryLabel.label.truncate = false;
                    }

                    createSeries("tickets", "Tickets");
                    createSeries("developers", "Devs");

                }); // end am4core.ready()


            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });
    </script>

    <!-- *** End AM Charts *** -->
    <!--  Plotly Charts  -->
    <!-- Load plotly.js into the DOM -->
    <script src='https://cdn.plot.ly/plotly-2.4.2.min.js'></script>
    <script>
        $.ajax({
            type: "POST",
            url: "/Home/PlotlyBarChart",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                var data = result;

                var layout = { barmode: 'group' };

                Plotly.newPlot('plotlyChart', data, layout);
            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });
    </script>

}